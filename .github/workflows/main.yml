# This is a basic workflow to help you get started with Actions

name: rootfs

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  kernel:
    runs-on: ubuntu-latest
    strategy:
            matrix:
                version: [6.4, 6.6, 6.7]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        
      - name: Install Dependencies
        run: sudo apt update && sudo apt install build-essential gcc-aarch64-linux-gnu bc flex bison 7zip kmod bash cpio binutils tar git wget dpkg libssl-dev

      - name: Build kernel
        run: sudo sh nabu-Kernel_build.sh ${{ matrix.version }}

      - name: Upload deb packages
        uses: actions/upload-artifact@v4.0.0
        with:
          # Artifact name
          name: xiaomi-nabu-debs_${{ matrix.version }}
          path: ${{ github.workspace }}/*.deb
          
  rootfs:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: kernel
    strategy:
            matrix:
                desktop: [ubuntu-desktop, lomiri]
                kernel: [6.4, 6.6, 6.7]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          pattern: xiaomi-nabu-debs*
      - name: Install Dependencies
        run: sudo apt update && sudo apt install unzip build-essential gcc-aarch64-linux-gnu bc flex bison 7zip kmod bash cpio binutils tar git wget dpkg libssl-dev

      - name: Build rootfs
        run: sudo sh nabu-rootfs_build.sh ${{ matrix.desktop }} ${{ matrix.kernel }}

      - name: Upload rootfs.7z
        uses: actions/upload-artifact@v4.0.0
        with:
          # Artifact name
          name: rootfs_${{ matrix.desktop }}_${{ matrix.kernel }}
          path: rootfs.7z
          compression-level: 0
